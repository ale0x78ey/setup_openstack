project_options:
  openstack:
    kolla_internal_vip_address: "192.168.0.10"
    kolla_external_vip_address: "192.168.0.11"
  openstack-victoria:
    kolla_internal_vip_address: "192.168.0.12"
    kolla_external_vip_address: "192.168.0.13"

openstack_host: "openstack{{ project_name | d('') }}"

#########
# Docker
#########

docker_registry: "192.168.0.70:4000"

docker_apt_repo: "deb https://download.docker.com/linux/ubuntu focal stable"
docker_gpg_key: https://download.docker.com/linux/ubuntu/gpg

########
# Kolla
########

kolla_openstack_release: "{{ openstack_release | d('victoria') }}"

kolla_options:
  victoria:
    openstack_tag: "victoria"
    tarballs_base: "https://tarballs.opendev.org"
    base_tag:
      debian: "stable-20210408"
      ubuntu: "20.04"
  train:
    openstack_tag: "9.3.2"
    tarballs_base: "https://tarballs.openstack.org"
    base_tag:
      ubuntu: "18.04"

# Possible values:
# - binary
# - source
kolla_install_type: source

# Possible values:
# - centos
# - debian
# - ubuntu
# - rhel
kolla_base_distro: ubuntu

# The Docker namespace name where images are placed.
kolla_docker_namespace: kolla

kolla_profiles:
  default:
    - chrony
    - cinder
    - cron
    - kolla-toolbox
    - fluentd
    - freezer
    - glance
    - haproxy
    - heat
    - horizon
    - iscsi
    - keepalived
    - keystone
    - mariadb
    - memcached
    - neutron
    - nova-
    - placement
    - openvswitch
    - rabbitmq
    - tgtd

kolla_network_interface: enp1s0
kolla_neutron_external_interface: enp2s0

kolla_local_src_dir: "{{ ansible_env.HOME }}/Projects"

kolla_local_src:
  - name: cinder-base
    path: "{{ kolla_local_src_dir }}/cinder"
  - name: karbor-base
    path: "{{ kolla_local_src_dir }}/karbor"
  - name: nova-base
    path: "{{ kolla_local_src_dir }}/nova"

#########
# Karbor
#########

karbor_access_key: "{{ lookup('file', ansible_env.HOME + '/.rgw/aws_access_key') }}"
karbor_secret_key: "{{ lookup('file', ansible_env.HOME + '/.rgw/aws_secret_key') }}"
karbor_s3_url: "http://192.168.0.70:7480"

##########
# Libvirt
##########

libvirt_access_key: "{{ lookup('file', ansible_env.HOME + '/.aws/aws_access_key') }}"
libvirt_secret_key: "{{ lookup('file', ansible_env.HOME + '/.aws/aws_secret_key') }}"
libvirt_s3_url: "https://storage.yandexcloud.net"
libvirt_region: "ru-central1"
libvirt_bucket: "bf084dfb-eeb9-4b82-9a43-9e1b77e6fa10"

libvirt_images:
  - name: kolla-ansible
    hostname: deploy
    s3_resources:
      - src: "cloud-images.ubuntu.com/focal/20210720/focal-server-cloudimg-amd64.img"
        dst: "/var/lib/libvirt/images/focal-server-cloudimg-amd64.img"

    cloud_init: |
      users:
        - name: "{{ ansible_env.USER }}"
          ssh-authorized-keys:
            - "{{ lookup('file', ansible_env.HOME + '/.ssh/id_rsa.pub') }}"
          sudo: ['ALL=(ALL) NOPASSWD:ALL']
          groups: sudo
          shell: /bin/bash

      runcmd:
        - echo "AllowUsers {{ ansible_env.USER }}" >> /etc/ssh/sshd_config
        - systemctl restart ssh

  - name: kolla-build
    hostname: build
    s3_resources:
      - src: "cloud-images.ubuntu.com/focal/20210720/focal-server-cloudimg-amd64.img"
        dst: "/var/lib/libvirt/images/focal-server-cloudimg-amd64.img"

    cloud_init: |
      users:
        - name: "{{ ansible_env.USER }}"
          ssh-authorized-keys:
            - "{{ lookup('file', ansible_env.HOME + '/.ssh/id_rsa.pub') }}"
          sudo: ['ALL=(ALL) NOPASSWD:ALL']
          groups: sudo
          shell: /bin/bash

      runcmd:
        - echo "AllowUsers {{ ansible_env.USER }}" >> /etc/ssh/sshd_config
        - systemctl restart ssh

  - name: "{{ openstack_host }}"
    hostname: "{{ openstack_host }}"
    s3_resources:
      - src: "cloud-images.ubuntu.com/focal/20210720/focal-server-cloudimg-amd64.img"
        dst: "/var/lib/libvirt/images/focal-server-cloudimg-amd64.img"

    cloud_init: |
      system_info:
        network:
          ethernets:
            enp1s0:
              dhcp4: true
              match:
                macaddress: 52:54:00:36:4e:b6
              set-name: enp1s0
            enp2s0:
              dhcp4: false
              match:
                macaddress: 52:54:00:1a:bd:7f
              set-name: enp2s0

      users:
        - name: "{{ ansible_env.USER }}"
          ssh-authorized-keys:
            - "{{ lookup('file', ansible_env.HOME + '/.ssh/id_rsa.pub') }}"
          sudo: ['ALL=(ALL) NOPASSWD:ALL']
          groups: sudo
          shell: /bin/bash

      runcmd:
        - echo "AllowUsers {{ ansible_env.USER }}" >> /etc/ssh/sshd_config
        - systemctl restart ssh
